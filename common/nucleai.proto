syntax = "proto3";

package nucleai;

// I want to keep everything here request-response, no streaming!
// This limitation makes infrastructure easier down the road.

message Void {}

message Event {
    int32 secondsFromNow = 1;
}

message ClientId {
    string txt = 1;
}


// This is likely going to change
// Currently for neural nets and based on https://www.cs.cornell.edu/~shmat/shmat_ccs15.pdf Figure 3

message IndexedValue {
    int32 index = 1;
    double value = 2;
}

message Parameters {
    repeated IndexedValue weights = 1;
    repeated IndexedValue biases = 2;
}

message Deltas {
    repeated IndexedValue gradients = 1;
}


service Learning {

    rpc Enqueue(EnqueueRequest) returns (EnqueueResponse) {} // client wants to be queued for the next cycle
    rpc Download(DownloadRequest) returns (DownloadResponse) {} // client wants to download parameters/etc
    rpc Upload(UploadRequest) returns (UploadResponse) {} // client wants to upload gradients/etc

}

message EnqueueRequest {
    ClientId clientId = 1;
}

message EnqueueResponse {
    Event waitTime = 1; // when the next cycle is starting
}


message DownloadRequest {
    ClientId clientId = 1;
}

message DownloadResponse {
    Parameters parameters = 1;
}


message UploadRequest {
    ClientId clientId = 1;
    Deltas deltas = 2;
}

message UploadResponse {

}
